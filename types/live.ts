/**
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { Content, FunctionCall, FunctionResponse, GenerativeContentBlob } from "./content";
import type { GenerationConfig, Tool } from "./requests";

/**
 * An options for setting a connection way.
 */
export interface LiveConnectionOptions {
  /** Custom WebSocket class used by Live client. */
  WebSocket?: typeof WebSocket;
  /** A function which can provide custom WebSocket instance. */
  createWebSocket?: (url: URL) => WebSocket;
}

/**
 * Generation Config for live API.
 * @see https://ai.google.dev/api/multimodal-live#bidigeneratecontentsetup
 */
export interface LiveGenerationConfig extends GenerationConfig {
  // Not-supported fields from https://ai.google.dev/api/multimodal-live#bidigeneratecontentsetup
  responseLogprobs?: never;
  responseMimeType?: never;
  logprobs?: never;
  responseSchema?: never;
  stopSequences?: never;

  /**
   * Multimodal Part format returned by Gemini.
   * If you specify "TEXT", the model will return the text.
   * @default ["AUDIO"]
   */
  responseModalities?: Array<"MODALITY_UNSPECIFIED" | "TEXT" | "IMAGE" | "AUDIO">;

  /**
   * Speech config.
   */
  speechConfig?: LiveSpeechConfig;
}

/** Config for speech */
export interface LiveSpeechConfig {
  voiceConfig?: {
    prebuiltVoiceConfig?: {
      /**
       * The type of voice the model speaks.
       */
      voiceName?: string;
    }
  }
}

/**
 * Incremental update of the current conversation delivered from the client.
 * All of the content here is unconditionally appended to the conversation history and used as part of the prompt to the model to generate content.
 * @see https://ai.google.dev/api/multimodal-live#bidigeneratecontentclientcontent
 */
export interface BidiGenerateContentClientContent {
  /**
   * The content appended to the current conversation with the model.
   */
  turns?: Content[];
  /**
   * If true, indicates that the server content generation should start with the currently accumulated prompt. Otherwise, the server awaits additional messages before starting generation.
   */
  turnComplete?: boolean;
}

/**
 * User input that is sent in real time.
 * @see https://ai.google.dev/api/multimodal-live#bidigeneratecontentrealtimeinput
 */
export interface BidiGenerateContentRealtimeInput {
  /**
   * Inlined bytes data for media input.
   * Only image/jpeg or audio/pcm are supported.
   */
  mediaChunks?: GenerativeContentBlob[];
}

/**
 * Incremental server update generated by the model in response to client messages.
 * @see https://ai.google.dev/api/multimodal-live#bidigeneratecontentservercontent
 */
export interface BidiGenerateContentServerContent {
  /**
   * Output only. If true, indicates that the model is done generating. Generation will only start in response to additional client messages. Can be set alongside content, indicating that the content is the last in the turn.
   */
  readonly turnComplete?: boolean;

  /**
   * If true, indicates that a client message has interrupted current model generation. If the client is playing out the content in real time, this is a good signal to stop and empty the current playback queue.
   */
  readonly interrupted?: boolean;

  /**
   * The content that the model has generated as part of the current conversation with the user.
   */
  readonly modelTurn?: Content;
}

/**
 * Message to be sent in the first and only first client message. Contains configuration that will apply for the duration of the session.
 * @see https://ai.google.dev/api/multimodal-live#bidigeneratecontentsetup
 */
export interface BidiGenerateContentSetup {
  /**
   * The model's resource name. This serves as an ID for the Model to use.
   * Format: models/{model}
   */
  model: `models/${string}`;

  /**
   * Generation config.
   */
  generationConfig?: LiveGenerationConfig;

  /**
   * The user provided system instructions for the model.
   */
  systemInstruction?: Content;

  /**
   * A list of Tools the model may use to generate the next response.
   */
  tools?: Tool[];
}

/**
 * Sent in response to a {@link BidiGenerateContentSetup} message from the client.
 * @see https://ai.google.dev/api/multimodal-live#bidigeneratecontentsetupcomplete
 */
export interface BidiGenerateContentSetupComplete {}

/**
 * Request for the client to execute the functionCalls and return the responses with the matching ids.
 * @see https://ai.google.dev/api/multimodal-live#bidigeneratecontenttoolcall
 */
export interface BidiGenerateContentToolCall {
  /**
   * The function call to be executed.
   */
  readonly functionCalls: FunctionCall[];
}

/**
 * @see https://ai.google.dev/api/multimodal-live#bidigeneratecontenttoolcallcancellation
 */
export interface BidiGenerateContentToolCallCancellation {
  /**
   * The ids of the tool calls to be cancelled.
   */
  readonly ids: string[];
}

/**
 * Client generated response to a {@link ToolCall} received from the server. Individual {@link FunctionResponse} objects are matched to the respective {@link FunctionCall} objects by the id field.
 * @see https://ai.google.dev/api/multimodal-live#bidigeneratecontenttoolresponse
 */
export interface BidiGenerateContentToolResponse {
  /**
   * The response to the function calls.
   */
  functionResponses?: FunctionResponse[];
}

/**
 * A message client sends, and server receives.
 * @see https://ai.google.dev/api/multimodal-live#send-messages
 */
export type LiveSendingMessage =
  {
    setup: BidiGenerateContentSetup;
  } | {
    clientContent: BidiGenerateContentClientContent;
  } | {
    realtimeInput: BidiGenerateContentRealtimeInput;
  } | {
    toolResponse: BidiGenerateContentToolResponse;
  };

/**
 * A message client receives, and server sends.
 * @see https://ai.google.dev/api/multimodal-live#receive-messages
 */
export type LiveReceivingMessage =
  {
    setupComplete: BidiGenerateContentSetupComplete
  } | {
    serverContent: BidiGenerateContentServerContent
  } | {
    toolCall: BidiGenerateContentToolCall
  } | {
    toolCallCancellation: BidiGenerateContentToolCallCancellation
  };
